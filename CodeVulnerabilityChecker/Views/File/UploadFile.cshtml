@model CodeVulnerabilityChecker.Models.FileInputModel

@{
    ViewBag.Title = "Upload File";
}

<h2>Upload File</h2>

@if (User.IsInRole("User") || User.IsInRole("Admin"))
{
    using (Html.BeginForm("UploadFile", "File", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="file-upload-area">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="file-input">
                        <div id="fileIcon"></div>
                        <br />
                        @*<input type="file" id="fileInput" title="Browse for a file" runat="server" />*@
                        @Html.TextBoxFor(model => model.UsrFile, new { type = "file", @accept = ".txt", @id = "fileInput", @name = "fileInput" })
                        <br />
                        <input type="submit" value="Upload File" class="btn btn-default" />
                    </div>
                    @Html.ValidationMessageFor(model => model.UsrFile, "", new { @class = "text-danger" })
                    
                </div>

            </div>
        </div>

        <script>
            var inputElement = document.getElementById("fileInput");
            var iconElement = document.getElementById("fileIcon");
            inputElement.onchange = function () {
                iconElement.className = "fileIcon";
            };
        </script>

    }
}
else
{
    <h2> You must @Html.ActionLink("sign in", "Login", "Account") to use the code scanner </h2>
}

<br />
<div>
    @Html.ActionLink("Back", "Scan", "Home")
</div>


